.only_dotnet:
  rules:
    - changes:
        - dotnet/**/*
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+.[0-9]+.[0-9]+-(alpha|beta|rc)\.[0-9]+$/'
    - if: '$CI_COMMIT_REF_NAME == "master"'
    - if: '$CI_COMMIT_REF_NAME == "develop"'
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'

dotnet:
  image: docker.slock.it/build-images/dotnet-sdk:6.0
  stage: bindings
  needs:
    - mac_os
    - win_jni
    - gcc8
    - arm_jni
  tags:
    - short-jobs
  script:
    - mkdir -p dotnet/In3/runtimes/linux-x86/native
    - mkdir -p dotnet/In3/runtimes/linux-x64/native
    - mkdir -p dotnet/In3/runtimes/linux-arm64/native
    - mkdir -p dotnet/In3/runtimes/osx-x64/native
    - mkdir -p dotnet/In3/runtimes/win-x64/native
    - cp mac_build/lib/libin3.dylib dotnet/In3/runtimes/osx-x64/native/libin3.dylib
    - cp x64_build/lib/libin3.so dotnet/In3/runtimes/linux-x86/native/libin3.so
    - cp x64_build/lib/libin3.so dotnet/In3/runtimes/linux-x64/native/libin3.so
    - cp win_jni/lib/libin3.so dotnet/In3/runtimes/win-x64/native/libin3.dll
    - cp arm_jni_build/lib/libin3.so dotnet/In3/runtimes/linux-arm64/native/libin3.so
    - cd dotnet
    - mkdir Release
    - dotnet add In3 package Vsxmd -v 1.4.5
    - dotnet build -c Release
    - cat docs/examples.md >> docs/api-dotnet.md
    - echo "\n## Index\n" >> docs/api-dotnet.md
    - tail -n +5 In3/bin/Release/IN3.md | sed 's/| Name | Type.*//' | sed 's/| ----.*//' |  sed 's/| \(.*\) |\(.*\)|\(.*\)|/- \2 **\1** - \3/' | sed 's/##### Summary//' | sed 's/##### Namespace//' | sed 's/# /## /'  >> docs/api-dotnet.md
    - cp -r In3/bin/Release/* Release/
  artifacts:
    paths:
      - dotnet/Release
      - dotnet/In3/runtimes/
      - dotnet/docs

.dotnet_test:
  stage: dotnet
  needs:
    - dotnet
  script:
    - dotnet test --logger "junit;LogFilePath=test_results.xml" ./dotnet/
  artifacts:
    reports:
      junit: dotnet/Test/test_results.xml

dotnet_win:
  extends:
    - .dotnet_test
    - .only_dotnet
  tags:
    - windows

dotnet_linux:
  extends:
    - .dotnet_test
  image: docker.slock.it/build-images/dotnet-sdk:6.0
  tags:
    - short-jobs

dotnet_macos:
  extends:
    - .dotnet_test
    - .only_dotnet
  tags:
    - mac-os

dotnet_arm:
  extends:
    - .dotnet_test
    - .only_dotnet
  image: mcr.microsoft.com/dotnet/sdk:6.0
  tags:
    - arm

release_nuget:
  stage: deploy
  image: docker.slock.it/build-images/dotnet-sdk:6.0
  tags:
    - short-jobs
  extends: .only_deploy
  needs:
    - dotnet_linux
    - dotnet_win
    - dotnet_arm
    - dotnet_macos
  script:
    - cd dotnet
    - export NUGET_VERSION=$(echo "$CI_COMMIT_TAG" | cut -c 2-)
    - dotnet pack -c Release -p:version=${NUGET_VERSION}
    - dotnet nuget push In3/bin/Release/Blockchains.In3.${NUGET_VERSION}.nupkg -k ${NUGET_GALLERY_API_KEY} -s https://api.nuget.org/v3/index.json
  artifacts:
    paths:
      - dotnet/In3/bin/Release/Blockchains.In3.${NUGET_VERSION}.nupkg
