[workspace]

[package]
name = "zk-crypto"
version = "0.1.0"
authors = ["Matter Labs Team <hello@matter-labs.io>"]
edition = "2018"

[net]
retry = 2                   # network retries
git-fetch-with-cli = true   # use the `git` executable for git operations

[lib]
crate-type = ["cdylib", "rlib", "staticlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
# `wasm-bindgen` have to be set to exact version because of the following issue: https://github.com/rustwasm/wasm-pack/issues/886
# Exact comment with solution: https://github.com/rustwasm/wasm-pack/issues/886#issuecomment-689597345
wasm-bindgen = "=0.2.60"
musig = { package = "musig", git = "https://github.com/matter-labs/schnorr-musig.git" }
bellman = { package = "bellman_ce", git = "https://github.com/matter-labs/bellman", branch = "plonk_release" }
franklin_crypto = { package = "franklin-crypto", git = "https://github.com/matter-labs/franklin-crypto.git", branch="constant_time"}
sha2 = "0.8.0"
rand = "0.4.0"
hex = "0.4.2"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.10"
byteorder = "1.3.4"

[profile.release]
opt-level = "s"
