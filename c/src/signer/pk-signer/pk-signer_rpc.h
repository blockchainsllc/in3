/*******************************************************************************
 * This file is part of the Incubed project.
 * Sources: https://github.com/slockit/in3-c
 *
 * Copyright (C) 2018-2022 slock.it GmbH, Blockchains LLC
 *
 *
 * COMMERCIAL LICENSE USAGE
 *
 * Licensees holding a valid commercial license may use this file in accordance
 * with the commercial license agreement provided with the Software or, alternatively,
 * in accordance with the terms contained in a written agreement between you and
 * slock.it GmbH/Blockchains LLC. For licensing terms and conditions or further
 * information please contact slock.it at in3@slock.it.
 *
 * Alternatively, this file may be used under the AGPL license as follows:
 *
 * AGPL LICENSE USAGE
 *
 * This program is free software: you can redistribute it and/or modify it under the
 * terms of the GNU Affero General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
 * [Permissions of this strong copyleft license are conditioned on making available
 * complete source code of licensed works and modifications, which include larger
 * works using a licensed work, under the same license. Copyright and license notices
 * must be preserved. Contributors provide an express grant of patent rights.]
 * You should have received a copy of the GNU Affero General Public License along
 * with this program. If not, see <https://www.gnu.org/licenses/>.
 *******************************************************************************/

// ::: This is a autogenerated file. Do not edit it manually! :::

/**
 * @file
 * pk-signer module
 */
#ifndef pk_signer_rpc_h__
#define pk_signer_rpc_h__

#ifdef __cplusplus
extern "C" {
#endif

#include "../../core/client/client.h"
#include "../../core/client/plugin.h"

/**
 * handles the rpc commands for the pk_signer modules.
 */
in3_ret_t pk_signer_rpc(in3_rpc_handle_ctx_t* ctx);

/**
 * adds a raw private key as signer, which allows signing transactions.
 */
in3_ret_t in3_addRawKey(in3_rpc_handle_ctx_t* ctx, bytes_t pk, char* curve);

/**
 * decrypts a JSON Keystore file as defined in the [Web3 Secret Storage Definition](https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition) and adds it as signer.
 */
in3_ret_t in3_addJsonKey(in3_rpc_handle_ctx_t* ctx, d_token_t* key, char* passphrase);

/**
 * adds a signer from a mnemomic phrase
 */
in3_ret_t in3_addMnemonic(in3_rpc_handle_ctx_t* ctx, char* mnemomic, char* passphrase, d_token_t* derivation, char* curve);

/**
 * returns a array of signer_ids the client is able to sign with.
 *
 * In order to add keys, you can use [in3_addRawKey](#in3-addrawkey) or configure them in the config. The result also contains the signer_ids of any signer signer-supporting the `PLGN_ACT_SIGN_ACCOUNT` action.
 */
in3_ret_t signer_ids(in3_rpc_handle_ctx_t* ctx);

/**
 * alias to signer_ids
 */
in3_ret_t eth_accounts(in3_rpc_handle_ctx_t* ctx);

#ifdef __cplusplus
}
#endif

#endif